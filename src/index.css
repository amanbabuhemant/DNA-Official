@import url('https://fonts.googleapis.com/css2?family=Inter:wght@200;300;400;500;600;700;800;900&display=swap');
@import url('https://fonts.googleapis.com/css2?family=JetBrains+Mono:wght@300;400;500&display=swap');

@tailwind base;
@tailwind components;
@tailwind utilities;

/* DNA Forge Hub - Black Minimalist Design System */

@layer base {
  /* Smooth scrolling for the entire page */
  html {
    scroll-behavior: smooth;
  }
  
  /* Background grid pattern for loading */
  .bg-grid-pattern {
    background-image: 
      linear-gradient(rgba(34, 197, 94, 0.1) 1px, transparent 1px),
      linear-gradient(90deg, rgba(34, 197, 94, 0.1) 1px, transparent 1px);
    background-size: 50px 50px;
  }
  
  :root {
    /* Pure Black Minimalist Theme */
    --background: 0 0% 0%;
    --foreground: 0 0% 95%;
    
    /* Surface Colors */
    --card: 0 0% 3%;
    --card-foreground: 0 0% 90%;
    
    --popover: 0 0% 2%;
    --popover-foreground: 0 0% 90%;
    
    /* Accent Colors - Minimal and Electric */
    --primary: 120 100% 50%;
    --primary-foreground: 0 0% 0%;
    --primary-glow: 120 100% 60%;
    
    /* Secondary Accents */
    --secondary: 0 0% 8%;
    --secondary-foreground: 0 0% 80%;
    
    /* Muted Elements */
    --muted: 0 0% 5%;
    --muted-foreground: 0 0% 60%;
    
    /* Accent Highlights */
    --accent: 180 100% 50%;
    --accent-foreground: 0 0% 0%;
    
    /* Grid Colors */
    --grid-primary: 120 100% 50%;
    --grid-secondary: 180 100% 50%;
    --grid-muted: 0 0% 15%;
    
    /* Status Colors */
    --destructive: 0 100% 50%;
    --destructive-foreground: 0 0% 95%;
    
    --success: 120 100% 50%;
    --success-foreground: 0 0% 0%;
    
    --warning: 60 100% 50%;
    --warning-foreground: 0 0% 0%;
    
    /* Form Elements */
    --border: 0 0% 15%;
    --input: 0 0% 8%;
    --ring: 120 100% 50%;

    --radius: 0.25rem;

    /* Sidebar (minimal for black theme) */
    --sidebar-background: 0 0% 2%;
    --sidebar-foreground: 0 0% 90%;
    --sidebar-primary: 0 0% 0%;
    --sidebar-primary-foreground: 0 0% 95%;
    --sidebar-accent: 0 0% 5%;
    --sidebar-accent-foreground: 0 0% 90%;
    --sidebar-border: 0 0% 10%;
    --sidebar-ring: 120 100% 50%;
    
    /* Grid System Variables */
    --grid-size: 40px;
    --grid-opacity: 0.1;
    --grid-active-opacity: 0.3;
    
    /* Animations */
    --transition-smooth: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    --transition-bounce: all 0.4s cubic-bezier(0.68, -0.55, 0.265, 1.55);
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground font-inter antialiased;
    font-feature-settings: 'cv11', 'ss01';
    font-variation-settings: 'opsz' 32;
  }
  
  html {
    scroll-behavior: smooth;
  }

  /* Grid Background */
  .grid-bg {
    background-image: 
      linear-gradient(rgba(255, 255, 255, var(--grid-opacity)) 1px, transparent 1px),
      linear-gradient(90deg, rgba(255, 255, 255, var(--grid-opacity)) 1px, transparent 1px);
    background-size: var(--grid-size) var(--grid-size);
    position: relative;
    overflow: hidden;
  }

  .grid-bg::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-image: 
      linear-gradient(hsl(var(--grid-primary) / 0.05) 1px, transparent 1px),
      linear-gradient(90deg, hsl(var(--grid-primary) / 0.05) 1px, transparent 1px);
    background-size: calc(var(--grid-size) * 4) calc(var(--grid-size) * 4);
    animation: gridPulse 8s ease-in-out infinite;
    pointer-events: none;
  }

  .grid-bg::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: radial-gradient(circle at 50% 50%, hsl(var(--primary) / 0.03) 0%, transparent 50%);
    animation: gridRotate 20s linear infinite;
    pointer-events: none;
  }
}

@layer components {
  /* Interactive Grid Lines */
  .interactive-grid {
    position: relative;
    overflow: hidden;
  }

  .interactive-grid::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-image: 
      linear-gradient(rgba(0, 255, 128, 0.1) 1px, transparent 1px),
      linear-gradient(90deg, rgba(0, 255, 128, 0.1) 1px, transparent 1px);
    background-size: 20px 20px;
    animation: gridMove 15s linear infinite;
    pointer-events: none;
    z-index: 1;
  }

  .interactive-grid:hover::before {
    animation-play-state: paused;
    background-image: 
      linear-gradient(rgba(0, 255, 128, 0.3) 1px, transparent 1px),
      linear-gradient(90deg, rgba(0, 255, 128, 0.3) 1px, transparent 1px);
  }

  /* Minimal Glass Card */
  .glass-card {
    background: rgba(0, 0, 0, 0.4);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.05);
    transition: var(--transition-smooth);
  }

  .glass-card:hover {
    background: rgba(0, 0, 0, 0.6);
    border-color: rgba(0, 255, 128, 0.2);
    box-shadow: 0 0 30px rgba(0, 255, 128, 0.1);
  }
  
  /* Gradient Text */
  .gradient-text {
    background: linear-gradient(135deg, hsl(var(--primary)), hsl(var(--accent)));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  /* Neon Glow Effect */
  .neon-glow {
    position: relative;
    transition: var(--transition-smooth);
  }

  .neon-glow:hover {
    text-shadow: 
      0 0 5px hsl(var(--primary) / 0.8),
      0 0 10px hsl(var(--primary) / 0.6),
      0 0 15px hsl(var(--primary) / 0.4),
      0 0 20px hsl(var(--primary) / 0.2);
  }

  /* Minimal Button */
  .btn-minimal {
    background: transparent;
    border: 1px solid rgba(255, 255, 255, 0.1);
    color: hsl(var(--foreground));
    transition: var(--transition-smooth);
    position: relative;
    overflow: hidden;
  }

  .btn-minimal::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(0, 255, 128, 0.1), transparent);
    transition: left 0.5s ease;
  }

  .btn-minimal:hover {
    border-color: hsl(var(--primary) / 0.5);
    box-shadow: 0 0 20px hsl(var(--primary) / 0.2);
    color: hsl(var(--primary));
  }

  .btn-minimal:hover::before {
    left: 100%;
  }

  /* Floating Elements */
  .float-element {
    animation: float 6s ease-in-out infinite;
  }

  .float-element:nth-child(2n) {
    animation-delay: -2s;
  }

  .float-element:nth-child(3n) {
    animation-delay: -4s;
  }

  /* Pulse Border */
  .pulse-border {
    position: relative;
    overflow: hidden;
  }

  .pulse-border::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(45deg, transparent, hsl(var(--primary) / 0.2), transparent);
    animation: borderPulse 3s linear infinite;
    z-index: -1;
  }

  /* Code Block Styling */
  .code-block {
    font-family: 'JetBrains Mono', monospace;
    background: rgba(0, 0, 0, 0.8);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 4px;
    color: hsl(var(--primary));
  }
}

@layer utilities {
  /* Animations */
  @keyframes gridPulse {
    0%, 100% { opacity: 0.3; }
    50% { opacity: 0.6; }
  }

  @keyframes gridRotate {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }

  @keyframes gridMove {
    0% { background-position: 0 0; }
    100% { background-position: 40px 40px; }
  }

  @keyframes float {
    0%, 100% { transform: translateY(0px) rotate(0deg); }
    25% { transform: translateY(-10px) rotate(1deg); }
    50% { transform: translateY(-5px) rotate(0deg); }
    75% { transform: translateY(-15px) rotate(-1deg); }
  }

  @keyframes borderPulse {
    0% { transform: translateX(-100%); }
    100% { transform: translateX(100%); }
  }

  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes slideInLeft {
    from {
      opacity: 0;
      transform: translateX(-50px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  @keyframes scaleIn {
    from {
      opacity: 0;
      transform: scale(0.8);
    }
    to {
      opacity: 1;
      transform: scale(1);
    }
  }

  .animate-fade-in-up {
    animation: fadeInUp 0.8s ease-out forwards;
  }

  .animate-slide-in-left {
    animation: slideInLeft 0.8s ease-out forwards;
  }

  .animate-scale-in {
    animation: scaleIn 0.8s ease-out forwards;
  }

  /* Utility Classes */
  .text-mono {
    font-family: 'JetBrains Mono', monospace;
  }

  .border-glow {
    box-shadow: 0 0 10px hsl(var(--primary) / 0.3);
  }

  .border-glow:hover {
    box-shadow: 0 0 20px hsl(var(--primary) / 0.5);
  }

  /* Interactive Grid Background */
  .grid-background {
    background-image: 
      linear-gradient(rgba(0, 255, 128, 0.15) 1px, transparent 1px),
      linear-gradient(90deg, rgba(0, 255, 128, 0.15) 1px, transparent 1px);
    background-size: 40px 40px;
    animation: gridMove 20s linear infinite;
  }

  .grid-background::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-image: 
      linear-gradient(rgba(0, 255, 255, 0.08) 1px, transparent 1px),
      linear-gradient(90deg, rgba(0, 255, 255, 0.08) 1px, transparent 1px);
    background-size: 80px 80px;
    animation: gridMove 30s linear infinite reverse;
  }
}

/* Gradient Text Animation */
@keyframes gradient-flow {
  0%, 100% {
    background-size: 200% 200%;
    background-position: left center;
  }
  50% {
    background-size: 200% 200%;
    background-position: right center;
  }
}

.animate-gradient-flow {
  animation: gradient-flow 3s ease-in-out infinite;
}

/* Sparkle Animations */
@keyframes sparkle {
  0%, 100% {
    opacity: 0;
    transform: scale(0.5) rotate(0deg);
  }
  50% {
    opacity: 1;
    transform: scale(1) rotate(180deg);
  }
}

@keyframes twinkle {
  0%, 100% {
    opacity: 0.3;
    transform: scale(0.8);
  }
  50% {
    opacity: 1;
    transform: scale(1.2);
  }
}

.animate-sparkle {
  animation: sparkle 2s ease-in-out infinite;
}

.animate-twinkle {
  animation: twinkle 1.5s ease-in-out infinite;
}